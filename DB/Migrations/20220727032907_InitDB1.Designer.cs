// <auto-generated />
using System;
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(ChallengeContext))]
    [Migration("20220727032907_InitDB1")]
    partial class InitDB1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DB.Genero", b =>
                {
                    b.Property<int>("GeneroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GeneroID"), 1L, 1);

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GeneroID");

                    b.ToTable("Genero", (string)null);
                });

            modelBuilder.Entity("DB.Model.PeliculaPersonaje", b =>
                {
                    b.Property<int>("PersonajeId")
                        .HasColumnType("int");

                    b.Property<int>("PeliculaId")
                        .HasColumnType("int");

                    b.HasKey("PersonajeId", "PeliculaId");

                    b.HasIndex("PeliculaId");

                    b.ToTable("PeliculaPersonaje", (string)null);
                });

            modelBuilder.Entity("DB.Pelicula", b =>
                {
                    b.Property<int>("PeliculaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PeliculaID"), 1L, 1);

                    b.Property<int>("Clasificacion")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaDeCreacion")
                        .HasColumnType("datetime2");

                    b.Property<int>("GeneroID")
                        .HasColumnType("int");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PeliculaID");

                    b.HasIndex("GeneroID");

                    b.ToTable("Pelicula", (string)null);
                });

            modelBuilder.Entity("DB.Personaje", b =>
                {
                    b.Property<int>("PersonajeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonajeID"), 1L, 1);

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Historia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonajeID");

                    b.ToTable("Personaje", (string)null);
                });

            modelBuilder.Entity("DB.Model.PeliculaPersonaje", b =>
                {
                    b.HasOne("DB.Pelicula", "Pelicula")
                        .WithMany("PeliculasPersonajes")
                        .HasForeignKey("PeliculaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DB.Personaje", "Personaje")
                        .WithMany("PeliculasPersonajes")
                        .HasForeignKey("PersonajeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelicula");

                    b.Navigation("Personaje");
                });

            modelBuilder.Entity("DB.Pelicula", b =>
                {
                    b.HasOne("DB.Genero", "Genero")
                        .WithMany("Peliculas")
                        .HasForeignKey("GeneroID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("DB.Genero", b =>
                {
                    b.Navigation("Peliculas");
                });

            modelBuilder.Entity("DB.Pelicula", b =>
                {
                    b.Navigation("PeliculasPersonajes");
                });

            modelBuilder.Entity("DB.Personaje", b =>
                {
                    b.Navigation("PeliculasPersonajes");
                });
#pragma warning restore 612, 618
        }
    }
}
